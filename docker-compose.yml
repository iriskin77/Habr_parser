version: "3.9"

services:
  web:
    build: .
    volumes:
      - ./db.sqlite3:/parser/db.sqlite3
      - ./info.log:/parser/info.log
      - static:/parser/static/
    links:
      - redis
    networks:
      - custom

  db:
    image: postgres
    container_name: "db"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    restart: always
    env_file:
      - .env
    ports:
      - "5234:5432"
    networks:
      - custom

  celery-worker:
    build: .
    container_name: celery-worker
    entrypoint: celery
    command: -A parser.celery worker --loglevel=info
    environment:
        CELERY_BROKER_URL: "redis://redis:6379/0"
        CELERY_RESULT_BACKEND: "redis://redis:6379/0"
    volumes:
    - .:/var/www/app/worker
    links:
    - redis
    depends_on:
    - redis
    networks:
      - custom

  celery-beat:
    build: .
    container_name: celery-beat
    entrypoint: celery
    command: -A parser.celery beat --loglevel=info
    environment:
      CELERY_BROKER_URL: "redis://redis:6379/0"
      CELERY_RESULT_BACKEND: "redis://redis:6379/0"
    volumes:
      - .:/var/www/app/beat
    links:
      - celery-worker
      - redis
    depends_on:
      - celery-worker
      - redis
    networks:
      - custom

  flower:
    image: mher/flower:0.9.7
    command: ['flower', '--broker=redis://redis:6379', '--port=5555']
    ports:
      - "5557:5555"
    depends_on:
      - redis
    networks:
      - custom

  redis:
    image: redis
    container_name: redis
    restart: always
    volumes:
      - /path/to/local/d–∞ta:/root/redis
      - /path/to/local/redis.conf:/usr/local/etc/redis/redis.conf
    ports:
    - "6379:6379"
    networks:
      - custom

  prometheus:
    image: prom/prometheus:v2.37.9
    command: --web.enable-remote-write-receiver
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/prometheus.yml:/prometheus/prometheus.yml
    networks:
      - custom

  nginx:
    image: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - static:/var/www/static
    ports:
      - "8080:80"
    depends_on:
      - web
    networks:
      - custom

networks:
  custom:
    driver: bridge

volumes:
  static:
  postgres_data:
